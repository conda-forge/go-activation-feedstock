{% set version = "1.21.3" %}

{% if cross_target_platform is undefined %}
{% set cross_target_platform = "foo" %}
{% endif %}

package:
  name: go-{{ go_variant_str }}_{{ cross_target_platform }}
  version: {{ version }}

source:
  # Add a source we don't need so that the bot issues PRs here automatically.
  url: https://dl.google.com/go/go{{ version }}.src.tar.gz
  sha256: 186f2b6f8c8b704e696821b09ab2041a5c1ee13dcbc3156a13adcf75931ee488

build:
  number: 0
  run_exports:   # [cross_target_platform == "osx-64"]
    strong_constrains:   # [cross_target_platform == "osx-64"]
      - __osx>=10.12    # [cross_target_platform == "osx-64"]
  run_exports:   # [cross_target_platform == "linux-64" and go_variant_str == "cgo"]
    strong:   # [cross_target_platform == "linux-64" and go_variant_str == "cgo"]
      - __glibc >=2.17                    # [cross_target_platform == "linux-64" and go_variant_str == "cgo"]

requirements:
  build:
    - sed  # [osx]
  run:
    - go {{ version }}.*
    - _go_select =={{ go_variant_ver }}={{ go_variant_str }}

test:
  files:
    - hello_world.go

about:
  home: http://golang.org
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE.txt
  summary: The Go ({{ go_variant_str }}) compiler activation scripts for conda-build.
  description: |
    This package enables the CONDA_GO_COMPILER environment variable. 
    This variable is used by conda-forge's patched GoLang compiler to 
    set conda-aware GOBIN and GOPATH default values. These default 
    values are ignored if GOBIN and GOPATH environment variables 
    are set independently by the user.

    Futhermore, this package set the correct GOARCH and GOOS
    environment variables to enable cross-compilation.
  doc_url: https://golang.org/doc
  dev_url: https://go.googlesource.com/go

extra:
  feedstock-name: go-activation
  recipe-maintainers:
    - conda-forge/go
